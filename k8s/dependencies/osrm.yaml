apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: osrm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: osrm
  serviceName: osrm
  template:
    metadata:
      labels:
        app: osrm
    spec:
      containers:
        - image: osrm/osrm-backend:v5.22.0
          name: osrm
          command: ["/bin/sh"]
          args:
            - -c
            - |
              apt-get update && apt-get install -y --no-install-recommends wget tar && \
              wget --no-check-certificate --debug "${DOWNLOAD_URL}" -O /data/sweden-latest.osm.pbf && \
              rm -rf /var/lib/apt/lists/* && \
              osrm-extract -p /opt/car.lua /data/sweden-latest.osm.pbf && \
              osrm-partition /data/sweden-latest.osrm && \
              osrm-customize /data/sweden-latest.osrm && \
              osrm-routed --algorithm mld --max-table-size 10000 /data/sweden-latest.osrm
          env:
            - name: DOWNLOAD_URL
              value: https://download.geofabrik.de/europe/sweden-latest.osm.pbf

          ports:
            - containerPort: 5000
              protocol: TCP
          volumeMounts:
            - name: osrm-data
              mountPath: "/data"
  volumeClaimTemplates:
    - metadata:
        name: osrm-data
      spec:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "10Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: osrm
  labels:
    app: osrm
spec:
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000
  selector:
    app: osrm
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: osrm-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - osrm.iteam.services
      secretName: osrm-prod-tls
  rules:
    - host: osrm.iteam.services
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: osrm
                port:
                  number: 5000